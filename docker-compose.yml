version: '3.8'

services:
  proxy:
    container_name: aap-proxy
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
    - ./.config/nginx:/etc/nginx/conf.d
    - aap-ssl-cert:/etc/letsencrypt
    depends_on:
    - certbot

  app:
    container_name: aap-app
    image: node:18.17.0-alpine
    volumes:
    - ./app:/home/www/project:rw
    working_dir: /home/www/project
    command: npm run start:dev

  api:
    container_name: aap-api
    image: node:18.17.0-alpine
    volumes:
    - ./api:/home/www/project:rw
    # depends_on:
      # - mariadb
    working_dir: /home/www/project
    command: npm run start:dev

  certbot:
    container_name: aap-certbot
    image: certbot/certbot
    volumes:
    - aap-ssl-cert:/etc/letsencrypt
    entrypoint: /bin/sh -c "mkdir -p /etc/letsencrypt/live/ && openssl req -x509 -nodes -newkey rsa:1024 -days 1 -keyout '/etc/letsencrypt/live/privkey.pem' -out '/etc/letsencrypt/live/fullchain.pem' -subj '/CN=localhost'"

  # mariadb:
  #   container_name: aap-mariadb
  #   image: mariadb:10.6.8
  #   command: 'mysqld --innodb-flush-method=fsync --innodb-use-native-aio=OFF --log_bin=ON --skip-innodb-file-per-table --server-id=1 --lower_case_table_names=1'
  #   ports:
  #     - '3306:3306'
  #   environment:
  #     MYSQL_ROOT_PASSWORD: localdb
  #   volumes:
      # - .docker-persistence/mariadb:/var/lib/mysql # bind mount
      # - aap-db:/var/lib/mysql # volume
      # - ./.config/mariadb:/docker-entrypoint-initdb.d/:ro

  # redis:
  #   container_name: anvil-redis
  #   image: 'redis:7.0.3'
  #   command: redis-server --requirepass redis
  #   ports:
  #     - '6379:6379'
  #   volumes:
  #     - ./.config/redis:/usr/local/etc/redis/
  #     # - .docker-persistence/redis:/data # bind mount
  #     - anvil-cache:/data # volume
  #   environment:
  #     - REDIS_REPLICATION_MODE=master

volumes:
  # aap-db:
  # aap-cache:
  aap-ssl-cert:
